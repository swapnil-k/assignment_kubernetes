apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.deployment.name }}
      group: blue
  replicas: {{ .Values.deployment.replicaCount }}
  minReadySeconds: {{ .Values.deployment.minReadySeconds }}
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.name }}
        group: blue
    spec:
      containers:
      - image: {{ .Values.deployment.image.repo }}:{{ .Values.deployment.image.tag }}
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        name: {{ .Values.deployment.name }}
        env:
        - name: REDIS
          valueFrom:
            secretKeyRef:
              name: api
              key: redis
        - name: MONGODB
          valueFrom:
            secretKeyRef:
              name: api
              key: mongodb
        ports:
        - name: {{ .Values.deployment.name }}-port
          containerPort: {{ .Values.deployment.port }}
          # - containerPort: {{ .Values.deployment.port }}
          protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: {{ .Values.deployment.healthPath }}
          #    port: {{ .Values.deployment.port }}
          #  initialDelaySeconds: {{ .Values.deployment.initialDelay }}
          #  periodSeconds: {{ .Values.deployment.liveness.period }}
          #  timeoutSeconds: {{ .Values.deployment.liveness.timeout }}
          #  successThreshold: {{ .Values.deployment.liveness.successThreshold }}
          #  failureThreshold: {{ .Values.deployment.liveness.failureThreshold }}
          #readinessProbe:
          #  httpGet:
          #    path: {{ .Values.deployment.healthPath }}
          #    port: {{ .Values.deployment.port }}
          #  initialDelaySeconds: {{ .Values.deployment.initialDelay }}
          #  periodSeconds: {{ .Values.deployment.readiness.period }}
          #  timeoutSeconds: {{ .Values.deployment.readiness.timeout }}
          #  successThreshold: {{ .Values.deployment.readiness.successThreshold }}
          #  failureThreshold: {{ .Values.deployment.readiness.failureThreshold }}
        lifecycle:
          preStop:
            exec:
              command:
                - "sleep"
                - "{{ .Values.deployment.shutdownTime }}"
      affinity:
              podAntiAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - weight: 100
                    podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                          - key: {{ .Values.deployment.nodeKey }}
                            operator: In
                            values:
                            - {{ .Values.deployment.nodeValue }}
                      topologyKey: kubernetes.io/hostname
