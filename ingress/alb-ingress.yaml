apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "alb-external-ingress"
  namespace: "prod"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/security-groups: sg-021cca9f22d834393
    alb.ingress.kubernetes.io/subnets: subnet-07567bbd670117696,subnet-03959688f6cd2fdb4,subnet-01f10542cafc76e6a
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=60
    #alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-south-1:406151435945:certificate/f73cbfd6-4f6e-404e-aea0-87278e0addda
    #alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
        # Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /api/get-image
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '9'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/target-type: instance

spec:
  defaultBackend:
    service:
      name: nodejs-service
      port:
        number: 80
  rules:
    - http:
        paths:
          - path: /*
            pathType: Prefix
            backend:
              service:
                name: nodejs-service
                port:
                  number: 80

